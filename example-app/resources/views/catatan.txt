*UNTUK MELIHAT REQUEST SEARCH INPUT*
dd(request("name_input"));

*UNTUK QUERY FILTER SESUAI INPUT DI SEARCH INPUT*
public function posts()
    {
        $posts = Post::latest();

        if (request("search")) {
            $posts
                ->where("title", "like", "%" . request("search") . "%")
                ->orWhere("body", "like", "%" . request("search") . "%");
        }

        return view("posts", [
            "titles" => "All Posts",
            "active" => "posts",
            "seluruhPostingan" => $posts->get(),
        ]);
    }

OPSI LAIN DENGAN TERNARY OPERATOR
{{-- <li class="nav-item">
<a class="nav-link {{ $active === 'home' ? 'active' : '' }}" href="/">Home</a>
</li>
<li class="nav-item">
<a class="nav-link {{ $active === 'about' ? 'active' : '' }}" href="/about">About</a>
</li>
<li class="nav-item">
<a class="nav-link {{ $active === 'posts' ? 'active' : '' }}" href="/blog">Blog</a>
</li>
<li class="nav-item">
<a class="nav-link {{ $active === 'categories' ? 'active' : '' }}" href="/categories">Categories</a>
</li>

App/Providers/RouteServiceProviders  :  di sini tersimpan root ke Home agar yang sudah terauthenticate gabisa login lagi. 

MENGGANTI ROUTE KEY NAME DARI NILAI DEFAULT MENJADI SLUG. INI BERGUNA DI CRUD SEROURCESS
public function getRouteKeyName()
{
    return 'slug';
}

PENGGUNAAN * PADA ROUTE BERMAKNA SUB APAPUN SETELAHNYA AKAN MENGAKTIFKAN POSTS ITU SENDIRI
{{ Request::is("dashboard/posts*") ? 'active' : '' }}

PADA VIEW posts.create METHOD POST + ACTION MAKA SECARA OTOMATIS AKAN MENGARA KE METHOD STORE KALAU KITA PAKE RESOURCE
<form method="post" action="/dashboard/posts">

PACKAGE ELOQUENT SLUGGABLE
Package ini berfungsi agar secara oromatis slug pada form memiliki snippet opsi sesuai slug yg kita miliki

TRIX EDITOR UNTUK EDITING BODY ARTIKEL DENGAN MUDAH
langsung saja cek githubnya dan lihat panduan pemakaiannya, tapi dalam latihan ini kita hanya akan menggunakan file trix.css dan trix.js di dalam folder dist. trix-core.js untuk mengedit si editor trixnya lebih lanjut

CARA UNTUK MELIHAT ROUTE RESOURCE DEFAULT KITA
php artisan route:list

ENCTYPE
Ketika kita ingin bekerja dengan file di dalam form kita, kita harus ubah dulu formnya kita harus menambahkan sebuah atribut pada form yang bernama enctype, karena kalau tidak form tersebut tidak bisa menangani file.
enctype="multipart/form-data" , berfungsi untuk menangani 2 hal yaitu semua inputan dalam bentuk text akan diambil pakai request biasa lalu kalau ada file akan diambil menggunakan request file.

FILESYSTEM_DRIVER=public
Penggunaan FILESYSTEM_DRIVER=public di .env agar foleder penyimpanan default file yang kita upload tidak di config/filesystem.php melainkan di ubah jadi di folder public agar bisa di lihat seluruh pengunjung web. Untuk informasi lengkap lihat di documentation laravel dengan key "file storage" 

PHP ARTISAN STORAGE:LINK
Untuk menyambungkan publlicnya aplikasi kita dengan publiknya  storage. php artisan storage:link

$table->string("image")->nullable();
arti nullable pada migration data adalah bahwa datanya boleh kosong dalam hal ini data image boleh kosong dan akan diisi oleh unsplash sedangkan yang baru akan di isi manual.

Untuk image memang tidak bisa menggunakan old{{ "value" }}